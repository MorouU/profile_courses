Nearl简单框架（修正）

假设：
最大进程数：5
每个进程最多解析的URL线程数：5

============================ 第一种调度方式 ===========================

第一种：

：：主线程+1~20个线程+A线程，
	*|主线程：动态控制多进程；
		1、实时更新当前进程存活数；
		2、多进程共享队列Queue1中每被put多1个URL，则多开1个进程，直到最大进程数为止（5）；
		3、每个进程会从共享队列Queue1中get得到URL（竞争获取），并开启对应的线程进行操作；
		4、若某个进程中的所有线程都操作完毕，则会自动关闭这个进程；
			：：多进程中的线程组成：
				**|线程1：解析结果，并利用共享队列Queue2返回新URL给线程A等
				**|线程2...?[当前进程需解析URL数]：开启数个协程对URL进行请求等一系列IO操作，然后将得到的结果集进行解析+分类后给上边的线程2进行最后操作
					：：线程2...?的协程组成：
						**|主协程：调度用来解析的数个协程
							：：主协程的数个协程组成：
								**|协程1：解析 <a > 标签，并将获取到的新URL去重并返回
								**|协程2：解析 <script > 标签，将获取到的脚本文件去重并下载
								**|协程3： 解析 <link > 标签，将获取到的CSS文件去重并下载
								**|协程4：... 可自行添加
		
		
	*|线程1~20：从URL池中get到多进程的共享队列Queue1中

	*|A线程：根据解析得到的URL，更新URL池的内容

================================= END =================================

============================ 第二种调度方式 ===========================

第二种：
：：主线程+1~20个线程+A线程，
	*|主线程：控制多进程；
		1、事先使用进程池开好最大进程量（5）的进程；
		2、每个进程会从共享队列Queue1中get得到URL（竞争获取），并开启对应的线程进行操作；
		3、这些事先开好的进程，不会因线程执行完毕而被关闭；
			：：多进程中的线程组成：
				**|线程1：解析结果，并利用共享队列Queue2返回新URL给线程A等
				**|线程2...?[当前进程需解析URL数]：开启数个协程对URL进行请求等一系列IO操作，然后将得到的结果集进行解析+分类后给上边的线程2进行最后操作
					：：线程2...?的协程组成：
						**|主协程：调度用来解析的数个协程
							：：主协程的数个协程组成：
								**|协程1：解析 <a > 标签，并将获取到的新URL去重并返回
								**|协程2：解析 <script > 标签，将获取到的脚本文件去重并下载
								**|协程3： 解析 <link > 标签，将获取到的CSS文件去重并下载
								**|协程4：... 可自行添加
		
		
	*|线程1~20：从URL池中get到多进程的共享队列Queue1中

	*|A线程：根据解析得到的URL，更新URL池的内容

================================= END =================================


============================ 第三种调度方式 ===========================

第三种：
：：主线程+1~20个线程+A线程，
	*|主线程：控制多进程；
		1、实时更新当前进程存活数；
		2、多进程共享队列Queue1中每被put达到每个进程最多解析的URL的阈值时（5），则多开1个进程，直到最大进程数为止（5）；（若有3个URL需要解析，则开启1个进程；若有17个URL需要解析，则开启4个进程）
		3、每个进程会从共享队列Queue1中get得到URL（若开启的进程数＞1才会竞争获取，开启进程数=1则可以直接get得到），并开启对应的线程进行操作；
		4、若某个进程中的所有线程都操作完毕，则会自动关闭这个进程；
			：：多进程中的线程组成：
				**|线程1：解析结果，并利用共享队列Queue2返回新URL给线程A等
				**|线程2...?[当前进程需解析URL数]：开启数个协程对URL进行请求等一系列IO操作，然后将得到的结果集进行解析+分类后给上边的线程2进行最后操作
					：：线程2...?的协程组成：
						**|主协程：调度用来解析的数个协程
							：：主协程的数个协程组成：
								**|协程1：解析 <a > 标签，并将获取到的新URL去重并返回
								**|协程2：解析 <script > 标签，将获取到的脚本文件去重并下载
								**|协程3： 解析 <link > 标签，将获取到的CSS文件去重并下载
								**|协程4：... 可自行添加
		
		
	*|线程1~20：从URL池中get到多进程的共享队列Queue1中

	*|A线程：根据解析得到的URL，更新URL池的内容

================================= END =================================
